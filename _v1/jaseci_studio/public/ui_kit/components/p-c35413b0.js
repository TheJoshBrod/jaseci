import{a as e,c as n,r as o}from"./p-7d2798e1.js";function t(e,n){return e===n}const i=n({config:{theme:"winter",css:{}}}),r=()=>i.state.config.theme,s=n({hidden:!0,config:{message:"Hey there!",timeout:2e3}});var c="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function a(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function u(e,n,o){return e(o={path:n,exports:{},require:function(){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}()}},o.exports),o.exports}var l=u((function(e,n){
/**
 * Artyom.js is a voice control, speech recognition and speech synthesis JavaScript library.
 *
 * @requires {webkitSpeechRecognition && speechSynthesis}
 * @license MIT
 * @version 1.0.6
 * @copyright 2017 Our Code World (www.ourcodeworld.com) All Rights Reserved.
 * @author Carlos Delgado (https://github.com/sdkcarlos) and Sema García (https://github.com/semagarcia)
 * @see https://sdkcarlos.github.io/sites/artyom.html
 * @see http://docs.ourcodeworld.com/projects/artyom-js
 */
Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(){this.ArtyomCommands=[],this.ArtyomVoicesIdentifiers={"de-DE":["Google Deutsch","de-DE","de_DE"],"es-ES":["Google español","es-ES","es_ES","es-MX","es_MX"],"it-IT":["Google italiano","it-IT","it_IT"],"jp-JP":["Google 日本人","ja-JP","ja_JP"],"en-US":["Google US English","en-US","en_US"],"en-GB":["Google UK English Male","Google UK English Female","en-GB","en_GB"],"pt-BR":["Google português do Brasil","pt-PT","pt-BR","pt_PT","pt_BR"],"pt-PT":["Google português do Brasil","pt-PT","pt_PT"],"ru-RU":["Google русский","ru-RU","ru_RU"],"nl-NL":["Google Nederlands","nl-NL","nl_NL"],"fr-FR":["Google français","fr-FR","fr_FR"],"pl-PL":["Google polski","pl-PL","pl_PL"],"id-ID":["Google Bahasa Indonesia","id-ID","id_ID"],"hi-IN":["Google हिन्दी","hi-IN","hi_IN"],"zh-CN":["Google 普通话（中国大陆）","zh-CN","zh_CN"],"zh-HK":["Google 粤語（香港）","zh-HK","zh_HK"],native:["native"]},window.hasOwnProperty("speechSynthesis")?speechSynthesis.getVoices():console.error("Artyom.js can't speak without the Speech Synthesis API."),window.hasOwnProperty("webkitSpeechRecognition")?this.ArtyomWebkitSpeechRecognition=new window.webkitSpeechRecognition:console.error("Artyom.js can't recognize voice without the Speech Recognition API."),this.ArtyomProperties={lang:"en-GB",recognizing:!1,continuous:!1,speed:1,volume:1,listen:!1,mode:"normal",debug:!1,helpers:{redirectRecognizedTextOutput:null,remoteProcessorHandler:null,lastSay:null,fatalityPromiseCallback:null},executionKeyword:null,obeyKeyword:null,speaking:!1,obeying:!0,soundex:!1,name:null},this.ArtyomGarbageCollection=[],this.ArtyomFlags={restartRecognition:!1},this.ArtyomGlobalEvents={ERROR:"ERROR",SPEECH_SYNTHESIS_START:"SPEECH_SYNTHESIS_START",SPEECH_SYNTHESIS_END:"SPEECH_SYNTHESIS_END",TEXT_RECOGNIZED:"TEXT_RECOGNIZED",COMMAND_RECOGNITION_START:"COMMAND_RECOGNITION_START",COMMAND_RECOGNITION_END:"COMMAND_RECOGNITION_END",COMMAND_MATCHED:"COMMAND_MATCHED",NOT_COMMAND_MATCHED:"NOT_COMMAND_MATCHED"},this.Device={isMobile:!1,isChrome:!0},(navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/webOS/i)||navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)||navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/Windows Phone/i))&&(this.Device.isMobile=!0),-1==navigator.userAgent.indexOf("Chrome")&&(this.Device.isChrome=!1),this.ArtyomVoice={default:!1,lang:"en-GB",localService:!1,name:"Google UK English Male",voiceURI:"Google UK English Male"}}return e.prototype.addCommands=function(e){var n=this,o=function(e){e.hasOwnProperty("indexes")?n.ArtyomCommands.push(e):console.error("The given command doesn't provide any index to execute.")};if(e instanceof Array)for(var t=0;t<e.length;t++)o(e[t]);else o(e);return!0},e.prototype.clearGarbageCollection=function(){return this.ArtyomGarbageCollection=[]},e.prototype.debug=function(e,n){var o="[v"+this.getVersion()+"] Artyom.js";if(!0===this.ArtyomProperties.debug)switch(n){case"error":console.log("%c"+o+":%c "+e,"background: #C12127; color: black;","color:black;");break;case"warn":console.warn(e);break;case"info":console.log("%c"+o+":%c "+e,"background: #4285F4; color: #FFFFFF","color:black;");break;default:console.log("%c"+o+":%c "+e,"background: #005454; color: #BFF8F8","color:black;")}},e.prototype.detectErrors=function(){if("file:"==window.location.protocol){var e="Error: running Artyom directly from a file. The APIs require a different communication protocol like HTTP or HTTPS";return console.error(e),{code:"artyom_error_localfile",message:e}}return this.Device.isChrome?("https:"!=window.location.protocol&&console.warn("Warning: artyom is being executed using the '"+window.location.protocol+"' protocol. The continuous mode requires a secure protocol (HTTPS)"),!1):(e="Error: the Speech Recognition and Speech Synthesis APIs require the Google Chrome Browser to work.",console.error(e),{code:"artyom_error_browser_unsupported",message:e})},e.prototype.emptyCommands=function(){return this.ArtyomCommands=[]},e.prototype.execute=function(e){var n=this;if(e){if(n.ArtyomProperties.name){if(0!=e.indexOf(n.ArtyomProperties.name))return void n.debug('Artyom requires with a name "'+n.ArtyomProperties.name+"\" but the name wasn't spoken.","warn");e=e.substr(n.ArtyomProperties.name.length)}n.debug(">> "+e);for(var o=0;o<n.ArtyomCommands.length;o++){for(var t=(f=n.ArtyomCommands[o]).indexes,i=-1,r="",s=0;s<t.length;s++){var c=t[s];if(f.smart){if(c instanceof RegExp)c.test(e)&&(n.debug(">> REGEX "+c.toString()+" MATCHED AGAINST "+e+" WITH INDEX "+s+" IN COMMAND ","info"),i=parseInt(s.toString()));else if(-1!=c.indexOf("*")){var a=c.split("*");if(a.length>2){console.warn("Artyom found a smart command with "+(a.length-1)+" wildcards. Artyom only support 1 wildcard for each command. Sorry");continue}var u=a[0],l=a[1];""==l||" "==l?-1==e.indexOf(u)&&-1==e.toLowerCase().indexOf(u.toLowerCase())||(r=(r=e.replace(u,"")).toLowerCase().replace(u.toLowerCase(),""),i=parseInt(s.toString())):-1==e.indexOf(u)&&-1==e.toLowerCase().indexOf(u.toLowerCase())||-1==e.indexOf(l)&&-1==e.toLowerCase().indexOf(l.toLowerCase())||(r=(r=(r=e.replace(u,"").replace(l,"")).toLowerCase().replace(u.toLowerCase(),"").replace(l.toLowerCase(),"")).toLowerCase().replace(l.toLowerCase(),""),i=parseInt(s.toString()))}else console.warn("Founded command marked as SMART but have no wildcard in the indexes, remove the SMART for prevent extensive memory consuming or add the wildcard *");if(i>=0){i=parseInt(s.toString());break}}}if(i>=0)return n.triggerEvent(n.ArtyomGlobalEvents.COMMAND_MATCHED),{index:i,instruction:f,wildcard:{item:r,full:e}}}for(o=0;o<n.ArtyomCommands.length;o++){for(t=(f=n.ArtyomCommands[o]).indexes,i=-1,s=0;s<t.length;s++)if(c=t[s],!f.smart){if(e===c){n.debug(">> MATCHED FULL EXACT OPTION "+c+" AGAINST "+e+" WITH INDEX "+s+" IN COMMAND ","info"),i=parseInt(s.toString());break}if(e.toLowerCase()===c.toLowerCase()){n.debug(">> MATCHED OPTION CHANGING ALL TO LOWERCASE "+c+" AGAINST "+e+" WITH INDEX "+s+" IN COMMAND ","info"),i=parseInt(s.toString());break}}if(i>=0)return n.triggerEvent(n.ArtyomGlobalEvents.COMMAND_MATCHED),{index:i,instruction:f}}for(o=0;o<n.ArtyomCommands.length;o++){for(t=(f=n.ArtyomCommands[o]).indexes,i=-1,s=0;s<t.length;s++)if(!f.smart){if(e.indexOf(c=t[s])>=0){n.debug(">> MATCHED INDEX EXACT OPTION "+c+" AGAINST "+e+" WITH INDEX "+s+" IN COMMAND ","info"),i=parseInt(s.toString());break}if(e.toLowerCase().indexOf(c.toLowerCase())>=0){n.debug(">> MATCHED INDEX OPTION CHANGING ALL TO LOWERCASE "+c+" AGAINST "+e+" WITH INDEX "+s+" IN COMMAND ","info"),i=parseInt(s.toString());break}}if(i>=0)return n.triggerEvent(n.ArtyomGlobalEvents.COMMAND_MATCHED),{index:i,instruction:f}}if(n.ArtyomProperties.soundex)for(o=0;o<n.ArtyomCommands.length;o++){var f;for(t=(f=n.ArtyomCommands[o]).indexes,i=-1,s=0;s<t.length;s++)if(c=t[s],!f.smart&&n.soundex(e)==n.soundex(c))return n.debug(">> Matched Soundex command '"+c+"' AGAINST '"+e+"' with index "+s,"info"),i=parseInt(s.toString()),n.triggerEvent(n.ArtyomGlobalEvents.COMMAND_MATCHED),{index:i,instruction:f}}n.debug("Event reached : "+n.ArtyomGlobalEvents.NOT_COMMAND_MATCHED),n.triggerEvent(n.ArtyomGlobalEvents.NOT_COMMAND_MATCHED)}else console.warn("Internal error: Execution of empty command")},e.prototype.fatality=function(){var e=this;return new Promise((function(n,o){e.ArtyomProperties.helpers.fatalityPromiseCallback=n;try{e.ArtyomFlags.restartRecognition=!1,e.ArtyomWebkitSpeechRecognition.stop()}catch(e){o(e)}}))},e.prototype.getAvailableCommands=function(){return this.ArtyomCommands},e.prototype.getVoices=function(){return window.speechSynthesis.getVoices()},e.prototype.speechSupported=function(){return"speechSynthesis"in window},e.prototype.recognizingSupported=function(){return"webkitSpeechRecognition"in window},e.prototype.shutUp=function(){if("speechSynthesis"in window)do{window.speechSynthesis.cancel()}while(!0===window.speechSynthesis.pending);this.ArtyomProperties.speaking=!1,this.clearGarbageCollection()},e.prototype.getProperties=function(){return this.ArtyomProperties},e.prototype.getLanguage=function(){return this.ArtyomProperties.lang},e.prototype.getVersion=function(){return"1.0.6"},e.prototype.hey=function(e,n){var o,t,i=this;if(this.Device.isMobile?(this.ArtyomWebkitSpeechRecognition.continuous=!1,this.ArtyomWebkitSpeechRecognition.interimResults=!1,this.ArtyomWebkitSpeechRecognition.maxAlternatives=1):(this.ArtyomWebkitSpeechRecognition.continuous=!0,this.ArtyomWebkitSpeechRecognition.interimResults=!0),this.ArtyomWebkitSpeechRecognition.lang=this.ArtyomProperties.lang,this.ArtyomWebkitSpeechRecognition.onstart=function(){i.debug("Event reached : "+i.ArtyomGlobalEvents.COMMAND_RECOGNITION_START),i.triggerEvent(i.ArtyomGlobalEvents.COMMAND_RECOGNITION_START),i.ArtyomProperties.recognizing=!0,o=!0,e()},this.ArtyomWebkitSpeechRecognition.onerror=function(e){n(e.error),i.triggerEvent(i.ArtyomGlobalEvents.ERROR,{code:e.error}),"audio-capture"==e.error&&(o=!1),"not-allowed"==e.error&&(o=!1,i.triggerEvent(i.ArtyomGlobalEvents.ERROR,e.timeStamp-void 0<100?{code:"info-blocked",message:"Artyom needs the permision of the microphone, is blocked."}:{code:"info-denied",message:"Artyom needs the permision of the microphone, is denied"}))},i.ArtyomWebkitSpeechRecognition.onend=function(){!0===i.ArtyomFlags.restartRecognition?(!0===o?(i.ArtyomWebkitSpeechRecognition.start(),i.debug("Continuous mode enabled, restarting","info")):console.error("Verify the microphone and check for the table of errors in sdkcarlos.github.io/sites/artyom.html to solve your problem. If you want to give your user a message when an error appears add an artyom listener"),i.triggerEvent(i.ArtyomGlobalEvents.COMMAND_RECOGNITION_END,{code:"continuous_mode_enabled",message:"OnEnd event reached with continuous mode"})):i.ArtyomProperties.helpers.fatalityPromiseCallback&&(setTimeout((function(){i.ArtyomProperties.helpers.fatalityPromiseCallback()}),500),i.triggerEvent(i.ArtyomGlobalEvents.COMMAND_RECOGNITION_END,{code:"continuous_mode_disabled",message:"OnEnd event reached without continuous mode"})),i.ArtyomProperties.recognizing=!1},"normal"==i.ArtyomProperties.mode&&(t=function(e){if(i.ArtyomCommands.length){var n=e.results.length;i.triggerEvent(i.ArtyomGlobalEvents.TEXT_RECOGNIZED);for(var o=e.resultIndex;o<n;++o){var t=e.results[o][0].transcript;if(e.results[o].isFinal){var r=i.execute(t.trim());if("function"==typeof i.ArtyomProperties.helpers.redirectRecognizedTextOutput&&i.ArtyomProperties.helpers.redirectRecognizedTextOutput(t,!0),r&&1==i.ArtyomProperties.recognizing){i.debug("<< Executing Matching Recognition in normal mode >>","info"),i.ArtyomWebkitSpeechRecognition.stop(),i.ArtyomProperties.recognizing=!1,r.wildcard?r.instruction.action(r.index,r.wildcard.item,r.wildcard.full):r.instruction.action(r.index);break}}else{if("function"==typeof i.ArtyomProperties.helpers.redirectRecognizedTextOutput&&i.ArtyomProperties.helpers.redirectRecognizedTextOutput(t,!1),"string"==typeof i.ArtyomProperties.executionKeyword&&-1!=t.indexOf(i.ArtyomProperties.executionKeyword)&&(r=i.execute(t.replace(i.ArtyomProperties.executionKeyword,"").trim()))&&1==i.ArtyomProperties.recognizing){i.debug("<< Executing command ordered by ExecutionKeyword >>","info"),i.ArtyomWebkitSpeechRecognition.stop(),i.ArtyomProperties.recognizing=!1,r.wildcard?r.instruction.action(r.index,r.wildcard.item,r.wildcard.full):r.instruction.action(r.index);break}i.debug("Normal mode : "+t)}}}else i.debug("No commands to process in normal mode.")}),"quick"==i.ArtyomProperties.mode&&(t=function(e){if(i.ArtyomCommands.length){var n=e.results.length;i.triggerEvent(i.ArtyomGlobalEvents.TEXT_RECOGNIZED);for(var o=e.resultIndex;o<n;++o){var t=e.results[o][0].transcript;if(e.results[o].isFinal){if(r=i.execute(t.trim()),"function"==typeof i.ArtyomProperties.helpers.redirectRecognizedTextOutput&&i.ArtyomProperties.helpers.redirectRecognizedTextOutput(t,!1),r&&1==i.ArtyomProperties.recognizing){i.debug("<< Executing Matching Recognition in quick mode >>","info"),i.ArtyomWebkitSpeechRecognition.stop(),i.ArtyomProperties.recognizing=!1,r.wildcard?r.instruction.action(r.index,r.wildcard.item):r.instruction.action(r.index);break}}else{var r=i.execute(t.trim());if("function"==typeof i.ArtyomProperties.helpers.redirectRecognizedTextOutput&&i.ArtyomProperties.helpers.redirectRecognizedTextOutput(t,!0),r&&1==i.ArtyomProperties.recognizing){i.debug("<< Executing Matching Recognition in quick mode >>","info"),i.ArtyomWebkitSpeechRecognition.stop(),i.ArtyomProperties.recognizing=!1,r.wildcard?r.instruction.action(r.index,r.wildcard.item):r.instruction.action(r.index);break}}i.debug("Quick mode : "+t)}}else i.debug("No commands to process.")}),"remote"==i.ArtyomProperties.mode&&(t=function(e){var n=e.results.length;if(i.triggerEvent(i.ArtyomGlobalEvents.TEXT_RECOGNIZED),"function"!=typeof i.ArtyomProperties.helpers.remoteProcessorHandler)return i.debug("The remoteProcessorService is undefined.","warn");for(var o=e.resultIndex;o<n;++o)i.ArtyomProperties.helpers.remoteProcessorHandler({text:e.results[o][0].transcript,isFinal:e.results[o].isFinal})}),i.ArtyomWebkitSpeechRecognition.onresult=function(e){if(i.ArtyomProperties.obeying)t(e);else{if(!i.ArtyomProperties.obeyKeyword)return;for(var n="",o="",r=0;r<e.results.length;++r)e.results[r].isFinal?n+=e.results[r][0].transcript:o+=e.results[r][0].transcript;i.debug("Artyom is not obeying","warn"),(o.indexOf(i.ArtyomProperties.obeyKeyword)>-1||n.indexOf(i.ArtyomProperties.obeyKeyword)>-1)&&(i.ArtyomProperties.obeying=!0)}},i.ArtyomProperties.recognizing)i.ArtyomWebkitSpeechRecognition.stop(),i.debug("Event reached : "+i.ArtyomGlobalEvents.COMMAND_RECOGNITION_END),i.triggerEvent(i.ArtyomGlobalEvents.COMMAND_RECOGNITION_END);else try{i.ArtyomWebkitSpeechRecognition.start()}catch(e){i.triggerEvent(i.ArtyomGlobalEvents.ERROR,{code:"recognition_overlap",message:"A webkitSpeechRecognition instance has been started while there's already running. Is recommendable to restart the Browser"})}},e.prototype.initialize=function(e){var n=this;return"object"!=typeof e?Promise.reject("You must give the configuration for start artyom properly."):(e.hasOwnProperty("lang")&&(n.ArtyomVoice=n.getVoice(e.lang),n.ArtyomProperties.lang=e.lang),e.hasOwnProperty("continuous")&&(e.continuous?(this.ArtyomProperties.continuous=!0,this.ArtyomFlags.restartRecognition=!0):(this.ArtyomProperties.continuous=!1,this.ArtyomFlags.restartRecognition=!1)),e.hasOwnProperty("speed")&&(this.ArtyomProperties.speed=e.speed),e.hasOwnProperty("soundex")&&(this.ArtyomProperties.soundex=e.soundex),e.hasOwnProperty("executionKeyword")&&(this.ArtyomProperties.executionKeyword=e.executionKeyword),e.hasOwnProperty("obeyKeyword")&&(this.ArtyomProperties.obeyKeyword=e.obeyKeyword),e.hasOwnProperty("volume")&&(this.ArtyomProperties.volume=e.volume),e.hasOwnProperty("listen")&&(this.ArtyomProperties.listen=e.listen),e.hasOwnProperty("name")&&(this.ArtyomProperties.name=e.name),e.hasOwnProperty("debug")?this.ArtyomProperties.debug=e.debug:console.warn("The initialization doesn't provide how the debug mode should be handled. Is recommendable to set this value either to true or false."),e.mode&&(this.ArtyomProperties.mode=e.mode),!0===this.ArtyomProperties.listen?new Promise((function(e,o){n.hey(e,o)})):Promise.resolve(!0))},e.prototype.on=function(e,n){var o=this;return{then:function(t){var i={indexes:e,action:t};n&&(i.smart=!0),o.addCommands(i)}}},e.prototype.triggerEvent=function(e,n){var o=new CustomEvent(e,{detail:n});return document.dispatchEvent(o),o},e.prototype.repeatLastSay=function(e){var n=this.ArtyomProperties.helpers.lastSay;if(e)return n;null!=n&&this.say(n.text)},e.prototype.when=function(e,n){return document.addEventListener(e,(function(e){n(e.detail)}),!1)},e.prototype.remoteProcessorService=function(e){return this.ArtyomProperties.helpers.remoteProcessorHandler=e,!0},e.prototype.voiceAvailable=function(e){return void 0!==this.getVoice(e)},e.prototype.isObeying=function(){return this.ArtyomProperties.obeying},e.prototype.obey=function(){return this.ArtyomProperties.obeying=!0},e.prototype.dontObey=function(){return this.ArtyomProperties.obeying=!1},e.prototype.isSpeaking=function(){return this.ArtyomProperties.speaking},e.prototype.isRecognizing=function(){return this.ArtyomProperties.recognizing},e.prototype.getNativeApi=function(){return this.ArtyomWebkitSpeechRecognition},e.prototype.getGarbageCollection=function(){return this.ArtyomGarbageCollection},e.prototype.getVoice=function(e){var n=this.ArtyomVoicesIdentifiers[e];n||(console.warn("The providen language "+e+" isn't available, using English Great britain as default"),n=this.ArtyomVoicesIdentifiers["en-GB"]);for(var o=void 0,t=speechSynthesis.getVoices(),i=n.length,r=function(e){var i=t.filter((function(o){return o.name==n[e]||o.lang==n[e]}))[0];if(i)return o=i,"break"},s=0;s<i&&"break"!==r(s);s++);return o},e.prototype.newDictation=function(e){if(!this.recognizingSupported())return console.error("SpeechRecognition is not supported in this browser"),!1;var n=new window.webkitSpeechRecognition;return n.continuous=!0,n.interimResults=!0,n.lang=this.ArtyomProperties.lang,n.onresult=function(n){for(var o="",t="",i=0;i<n.results.length;++i)n.results[i].isFinal?o+=n.results[i][0].transcript:t+=n.results[i][0].transcript;e.onResult&&e.onResult(t,o)},new function(){var o=n,t=!0,i=!1;this.onError=null,this.start=function(){!0===e.continuous&&(i=!0),o.onstart=function(){"function"==typeof e.onStart&&!0===t&&e.onStart()},o.onend=function(){!0===i?(t=!1,o.start()):(t=!0,"function"==typeof e.onEnd&&e.onEnd())},o.start()},this.stop=function(){i=!1,o.stop()},"function"==typeof e.onError&&(o.onerror=e.onError)}},e.prototype.newPrompt=function(e){"object"!=typeof e&&console.error("Expected the prompt configuration.");var n=Object.assign([],this.ArtyomCommands),o=this;this.emptyCommands();var t={description:"Setting the artyom commands only for the prompt. The commands will be restored after the prompt finishes",indexes:e.options,action:function(t,i){o.ArtyomCommands=n;var r=e.onMatch(t,i);"function"==typeof r?r():console.error("onMatch function expects a returning function to be executed")}};e.smart&&(t.smart=!0),this.addCommands(t),void 0!==e.beforePrompt&&e.beforePrompt();var i={onStart:function(){void 0!==e.onStartPrompt&&e.onStartPrompt()},onEnd:function(){void 0!==e.onEndPrompt&&e.onEndPrompt()}};this.say(e.question,i)},e.prototype.sayRandom=function(e){if(e instanceof Array){var n=Math.floor(Math.random()*e.length);return this.say(e[n]),{text:e[n],index:n}}return console.error("Random quotes must be in an array !"),null},e.prototype.setDebug=function(e){return this.ArtyomProperties.debug=!!e},e.prototype.simulateInstruction=function(e){var n=this;if(!e||"string"!=typeof e)return console.warn("Cannot execute a non string command"),!1;var o=n.execute(e);return"object"!=typeof o?(console.warn("No command founded trying with "+e),!1):o.instruction?(o.instruction.smart?(n.debug("Smart command matches with simulation, executing","info"),o.instruction.action(o.index,o.wildcard.item,o.wildcard.full)):(n.debug("Command matches with simulation, executing","info"),o.instruction.action(o.index)),!0):void 0},e.prototype.soundex=function(e){var n=e.toLowerCase().split(""),o=n.shift(),t={a:"",e:"",i:"",o:"",u:"",b:1,f:1,p:1,v:1,c:2,g:2,j:2,k:2,q:2,s:2,x:2,z:2,d:3,t:3,l:4,m:5,n:5,r:6};return(o+n.map((function(e){return t[e]})).filter((function(e,n,i){return 0===n?e!==t[o]:e!==i[n-1]})).join("")+"000").slice(0,4).toUpperCase()},e.prototype.splitStringByChunks=function(e,n){e=e||"";for(var o=n=n||100,t=0,i=[];e[o];)" "==e[o++]&&(i.push(e.substring(t,o)),t=o,o+=n);return i.push(e.substr(t)),i},e.prototype.redirectRecognizedTextOutput=function(e){return"function"!=typeof e?(console.warn("Expected function to handle the recognized text ..."),!1):(this.ArtyomProperties.helpers.redirectRecognizedTextOutput=e,!0)},e.prototype.restart=function(){var e=this,n=e.ArtyomProperties;return new Promise((function(o,t){e.fatality().then((function(){e.initialize(n).then(o,t)}))}))},e.prototype.talk=function(e,n,o,t){var i=this,r=new SpeechSynthesisUtterance;r.text=e,r.volume=this.ArtyomProperties.volume,r.rate=this.ArtyomProperties.speed;var s=i.getVoice(i.ArtyomProperties.lang);t&&t.hasOwnProperty("lang")&&(s=i.getVoice(t.lang)),this.Device.isMobile?s&&(r.lang=s.lang):r.voice=s,1==n&&r.addEventListener("start",(function(){i.ArtyomProperties.speaking=!0,i.debug("Event reached : "+i.ArtyomGlobalEvents.SPEECH_SYNTHESIS_START),i.triggerEvent(i.ArtyomGlobalEvents.SPEECH_SYNTHESIS_START),t&&"function"==typeof t.onStart&&t.onStart.call(r)})),n>=o&&r.addEventListener("end",(function(){i.ArtyomProperties.speaking=!1,i.debug("Event reached : "+i.ArtyomGlobalEvents.SPEECH_SYNTHESIS_END),i.triggerEvent(i.ArtyomGlobalEvents.SPEECH_SYNTHESIS_END),t&&"function"==typeof t.onEnd&&t.onEnd.call(r)})),this.debug(n+" text chunk processed succesfully out of "+o),this.ArtyomGarbageCollection.push(r),window.speechSynthesis.speak(r)},e.prototype.say=function(e,n){var o=this,t=[];if(this.speechSupported()){if("string"!=typeof e)return console.warn("Artyom expects a string to speak "+typeof e+" given");if(!e.length)return console.warn("Cannot speak empty string");e.length>115?e.split(/,|:|\. |;/).forEach((function(e){if(e.length>115){var n=o.splitStringByChunks(e,115);t.push.apply(t,n)}else t.push(e)})):t.push(e),(t=t.filter((function(e){return e}))).forEach((function(e,i){e&&o.talk(e,i+1,t.length,n)})),o.ArtyomProperties.helpers.lastSay={text:e,date:new Date}}},e}();n.default=o}));const f=a(l),d=({onEnd:e,onResult:n,onStart:o})=>{const t=new f;var i=t.newDictation({continuous:!0,onResult:function(e,o){n(o),console.log(e)},onStart:function(){o&&o(),console.log("Dictation started by the user")},onEnd:function(){console.log("Dictation stopped by the user"),e&&e()}});return{start:()=>i.start(),stop:()=>{t.fatality(),i.stop()}}};function h(e,n){n&&(e.removeAttribute("events"),function(e,n){Object.keys(n).map((o=>{switch(o){case"onClick":n.onClick.map((n=>{e.addEventListener("click",(()=>{v(n)}))}));break;case"onMount":n.onMount.map((e=>{setTimeout((()=>{v(e)}),1e3)}));break;case"onEnterKeyPress":n.onEnterKeyPress.map((n=>{e.addEventListener("keydown",(e=>{"Enter"===e.key&&v(n)}))}));break;case"onKeyPress":n.onKeyPress.map((n=>{e.addEventListener("keydown",(e=>{var o;e.key.toLowerCase()===(null===(o=null==n?void 0:n.key)||void 0===o?void 0:o.trim().toLowerCase())&&v(n)}))}))}}))}(e,JSON.parse(n)))}function m(e,n){let o=e;const t=e.match(/var[(](.*?)[)]/g);return"string"==typeof e&&(null==t?void 0:t.length)>0?(t.map((e=>{var t,i;let r,s;const c=null===(i=null===(t=e.split("var("))||void 0===t?void 0:t[1])||void 0===i?void 0:i.split(")")[0],[a,u]=c.split(".");"result"!==a&&(r=g(a),s=r[u]),"result"===a&&(s=n),o=o.replaceAll(e,s)})),o):e}function p(e=[],n,o){const t={};let i=[...e];return e.map(((e,n)=>{if("string"==typeof e){const r=m(e,o);i=[...i.slice(0,n),r,...i.slice(n+1)],t[e]=r}})),(null==n?void 0:n.withOriginal)?t:i}function g(e){return window.document.querySelector("jsc-app").shadowRoot.querySelector(`[name='${e}']`)}function v(n,r){const c=n.fn,a=n.args,u=p(n.args,{},r);(function(e){let n=!0;return e.map((e=>{let[o,i,r]=e.split("::");switch(o=m(o),r=m(r),i=i.split("#").pop(),i){case"eq":default:n=t(o,r);break;case"neq":n=!t(o,r);break;case"gt":n=function(e,n){return e>n}(isNaN(Number(o))?o.length:Number(o),Number(r));break;case"lt":n=function(e,n){return e<n}(isNaN(Number(o))?o.length:Number(o),Number(r))}})),{run(e){n&&e()}}})(n.cond||[]).run((async()=>{switch(c){case"update":const r=a[0];if("string"!=typeof r)throw new Error("Component property reference must be a string");const[l,d]=r.split(".");g(l)[d]=u[1],(null==n?void 0:n.onCompleted)&&v(null==n?void 0:n.onCompleted);break;case"runForEach":alert("yo"),console.log({action:n});const h="string"==typeof(null==n?void 0:n.list)?JSON.parse((null==n?void 0:n.list)||"[]"):null==n?void 0:n.list;console.log({list:h}),h.forEach((e=>{let o=u[0];if(o="string"==typeof o?o:JSON.stringify(n.args[0]),"string"==typeof e||"number"==typeof e)o=o.replaceAll("item()",e);else{const n=o.match(/item[(](.*?)[)]/g),t=null==n?void 0:n.map((n=>{var o,t;const i=null===(t=null===(o=n.split("item("))||void 0===o?void 0:o[1])||void 0===t?void 0:t.split(")")[0];return{item:n,path:i,resolvedValue:w(e,i,e)}}));null==t||t.forEach((e=>{o=o.replaceAll(e.item,e.resolvedValue)}))}console.log({actionToRun:o}),o=JSON.parse(o),v(o)}));break;case"add":const m=u[1],y=Number(u[0])+Number(m);(null==n?void 0:n.onCompleted)&&v(null==n?void 0:n.onCompleted,y);break;case"append":const b=a[0];if("string"!=typeof b)throw new Error("Component name must be a string");const N=g(b);let E=a[1];!function(e,n){const t=n.match(/var[(](.*?)[)]/g);let i;t&&(i=p(t,{withOriginal:!0}),Object.keys(i).map((e=>{n=n.replaceAll(e,i[e])})));let r=JSON.parse(n);console.log({newComponent:r});const s=o([r]);e.shadowRoot.innerHTML+=s}(N,"string"==typeof E?E:JSON.stringify(E)),(null==n?void 0:n.onCompleted)&&v(null==n?void 0:n.onCompleted);break;case"refreshDatagrid":const S=a[0];if("string"!=typeof S)throw new Error("Component name must be a string");const T=g(S);T.refetchData&&T.refetchData();break;case"emit":(n=>{const[o,t]=n.split(".");if("string"!=typeof o)throw new Error("Component name must be a string");const i=g(o);if(i){const n=i.getAttribute("listeners"),o=e(n,{})[t];Object.keys(o).forEach((e=>{"$call"===e?o[e].forEach((e=>{const n=e.method;n&&i[n]()})):i.setAttribute(e,o[e])}))}})(u[0]);break;case"textToSpeech":t=u[0],(new f).say(t);break;case"runOperation":const I=null==n?void 0:n.operation,[A,O]=I.split("."),k=g(A);console.log({opComponent:k,opComponentName:A});const C=k.operations[O],_=C.args,M={};u.forEach(((e,n)=>{M[`arg(${_[n]})`]=e}));let D={...C},R=JSON.stringify(C.run);console.log({operationArgsMap:M}),Object.keys(M).forEach((e=>{console.log({arg:e}),R=R.replaceAll(e,M[e]),console.log(R)})),D.run=JSON.parse(R),D.run.map((e=>v(e))),console.log({updatedOperationStructure:D});break;case"showToast":const x=u[0];s.set("config",{message:x.message,timeout:x.timeout}),s.set("hidden",!1),setTimeout((()=>{s.set("hidden",!0)}),x.timeout);break;case"storeValue":"localstorage"===(null==n?void 0:n.target)&&localStorage.setItem(u[0],u[1]),(null==n?void 0:n.onCompleted)&&v(null==n?void 0:n.onCompleted);break;case"setTheme":i.state.config.theme=u[0];break;case"navigate":window.location.href=u[0];break;case"callEndpoint":const G=u[0],P="string"==typeof u[1]?u[1]:JSON.stringify(u[1]),H=u[2]||{"Content-Type":"application/json"};console.log({method:G,body:P});const j={method:G,headers:H};"GET"!==G&&(j.body=P);const F=await fetch(null==n?void 0:n.endpoint,j).then((e=>e.json()));if(!F)throw new Error("No action returned from endpoint.");n.onCompleted||(Array.isArray(F)?F.map((e=>v(e))):v(F)),function(e,n){if(!e)return;let o=JSON.stringify(e);const t=n,i=JSON.stringify(e).match(/res[(](.*?)[)]/g);console.log({resList:i});const r={};null==i||i.map((e=>{var n,o;const i=null===(o=null===(n=e.split("res("))||void 0===n?void 0:n[1])||void 0===o?void 0:o.split(")")[0],s=w(t,i,t);r[e]=s})),Object.keys(r).map((e=>{console.log({resolved:r[e]}),o=o.replaceAll(e,"object"==typeof r[e]?'"'+JSON.stringify(r[e])+'"':r[e])})),console.log({onCompletedString:JSON.parse(o)}),v(JSON.parse(o))}(n.onCompleted,F);break;default:new Function(`${c}.apply(this, ${JSON.stringify(u)})`)(),(null==n?void 0:n.onCompleted)&&v(null==n?void 0:n.onCompleted)}var t}))}const w=(e,n,o)=>n.split(/[\.\[\]\'\"]/).filter((e=>e)).reduce(((e,n)=>e?e[n]:o),e);export{u as a,c as b,i as c,g as d,d as e,r as g,h as s,s as t}